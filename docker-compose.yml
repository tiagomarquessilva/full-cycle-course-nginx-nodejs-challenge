version: '3'
services:
  database:
    container_name: database
    build:
      context: .
      dockerfile: ./config/mysql/Dockerfile
    volumes:
      - ./config/mysql/data:/var/lib/mysql
    env_file:
    - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3306"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nginx-node-network
    restart: always

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./config/node.js/Dockerfile
    env_file:
    - .env
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nginx-node-network
    restart: always

  reverse_proxy:
    container_name: reverse_proxy
    build:
      context: ./config/nginx
    ports:
      - 8080:8080
    depends_on:
      api:
        condition: service_healthy
    networks:
      - nginx-node-network
    restart: always

networks:
  nginx-node-network:
    driver: bridge

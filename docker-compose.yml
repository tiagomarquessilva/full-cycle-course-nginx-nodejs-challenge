version: '3'

networks:
  nginx-node-network:
    driver: bridge

services:
  database:
    container_name: database
    image: mysql:8
    command: --innodb-use-native-aio=0
    volumes:
      - ./config/mysql/data:/var/lib/mysql
    env_file:
      - .env
    networks:
      - nginx-node-network
    restart: always

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./config/node.js/Dockerfile
    entrypoint: dockerize -wait tcp://database:3306 -timeout 30s docker-entrypoint.sh
    command: npm start
    env_file:
      - .env
    depends_on:
      - database
    networks:
      - nginx-node-network
    restart: always

  reverse_proxy:
    container_name: reverse_proxy
    build:
      context: ./config/nginx
    ports:
      - 8080:8080
    depends_on:
      - api
    networks:
      - nginx-node-network
    restart: always
